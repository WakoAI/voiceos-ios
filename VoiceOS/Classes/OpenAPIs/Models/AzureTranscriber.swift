//
// AzureTranscriber.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AzureTranscriber: Codable, JSONEncodable, Hashable {

    public enum Provider: String, Codable, CaseIterable {
        case azure = "azure"
    }
    /** The transcriber provider. */
    public var provider: Provider? = .azure
    /** The selected languages for the transcription. */
    public var languages: [AzureLanguages]?

    public init(provider: Provider? = .azure, languages: [AzureLanguages]? = nil) {
        self.provider = provider
        self.languages = languages
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case provider
        case languages
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(provider, forKey: .provider)
        try container.encodeIfPresent(languages, forKey: .languages)
    }
}

