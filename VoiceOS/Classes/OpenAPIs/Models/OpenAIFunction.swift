//
// OpenAIFunction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OpenAIFunction: Codable, JSONEncodable, Hashable {

    /** This is the name of the function to be called. Must be less than 64 characters (a-z, A-Z, 0-9, including underscores). */
    public var name: String
    /** If true, the agent will wait for the function to return before continuing. */
    public var wait: Bool? = false
    /** The description of the OpenAI function call. */
    public var description: String
    /** The parameters of the OpenAI function call. */
    public var parameters: OpenAIFunctionParameter

    public init(name: String, wait: Bool? = false, description: String, parameters: OpenAIFunctionParameter) {
        self.name = name
        self.wait = wait
        self.description = description
        self.parameters = parameters
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case wait
        case description
        case parameters
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(wait, forKey: .wait)
        try container.encode(description, forKey: .description)
        try container.encode(parameters, forKey: .parameters)
    }
}

