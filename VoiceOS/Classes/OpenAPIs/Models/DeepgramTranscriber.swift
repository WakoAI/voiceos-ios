//
// DeepgramTranscriber.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DeepgramTranscriber: Codable, JSONEncodable, Hashable {

    public enum Provider: String, Codable, CaseIterable {
        case deepgram = "deepgram"
    }
    /** The transcriber provider. */
    public var provider: Provider? = .deepgram
    /** The deepgram model to use. */
    public var model: DeepgramModel?
    /** The selected language for the transcription. */
    public var language: DeepgramLanguages?
    /** Specific keywords you want to detect in the transcription. This is usefull to correctly understand product or company names. */
    public var keywords: [String]?

    public init(provider: Provider? = .deepgram, model: DeepgramModel? = nil, language: DeepgramLanguages? = nil, keywords: [String]? = nil) {
        self.provider = provider
        self.model = model
        self.language = language
        self.keywords = keywords
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case provider
        case model
        case language
        case keywords
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(provider, forKey: .provider)
        try container.encodeIfPresent(model, forKey: .model)
        try container.encodeIfPresent(language, forKey: .language)
        try container.encodeIfPresent(keywords, forKey: .keywords)
    }
}

